\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Aug 17 17:18:07 CEST 2018
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:allow , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=6000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\classpath "../stubs";

\javaSource "..";

\include "../utilityFunctionDeclarations.key";

\proofObligation "#Proof Obligation Settings
#Fri Aug 17 17:18:07 CEST 2018
contract=casino.contract.Casino[casino.contract.Casino\\:\\:closeCasino()].JML behavior operation contract.0
name=casino.contract.Casino[casino.contract.Casino\\:\\:closeCasino()].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "bubel" ) (keyVersion "af8f3cf08a84c404a4c6d4417e31ede444d22ddd"))
(keyLog "1" (keyUser "bubel" ) (keyVersion "af8f3cf08a84c404a4c6d4417e31ede444d22ddd"))
(keyLog "2" (keyUser "bubel" ) (keyVersion "af8f3cf08a84c404a4c6d4417e31ede444d22ddd"))

(autoModeTime "3381")

(branch "dummy ID"
(rule "instanceof_static_type" (formula "1") (term "0,0,0,1,1,0,0,1,1") (newnames "self,exc,heapAtPre,o,f,heapAtPre_0,savedHeapAtPre,o,f,o,f"))
(rule "boolean_equal" (formula "1") (term "0,0,1,1,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "1,0,1,0,0"))
(rule "concrete_impl_1" (formula "1") (term "0,1,1,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "10") (term "1"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_closeCasino,savedHeapBefore_closeCasino"))
(rule "simplifyUpdate2" (formula "10") (term "1"))
(builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_inState,exc_0") (contract "casino.contract.Casino[casino.contract.Casino::inState(int)].JML exceptional_behavior operation contract.0#casino.contract.Casino[casino.contract.Casino::inState(int)].JML normal_behavior operation contract.0"))
(branch "Post (inState)"
   (rule "insert_constant_value" (formula "9") (term "0,0,1,1,1,1"))
   (rule "insert_constant_value" (formula "9") (term "0,0,0,0,1,1,1"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "typeEqDerived" (formula "10") (term "0,1,1,0,1") (ifseqformula "9"))
   (rule "boolean_equal" (formula "10") (term "1,1,0,1"))
   (rule "concrete_and_3" (formula "10") (term "1,0,1"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "eqSymm" (formula "11") (term "0,1"))
   (rule "eqSymm" (formula "10") (term "0,0,1"))
   (rule "applyOnRigidFormula" (formula "11"))
   (rule "simplifyUpdate2" (formula "11") (term "1"))
   (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "9"))
   (rule "concrete_impl_4" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "applyOnRigidFormula" (formula "10"))
   (rule "simplifyUpdate2" (formula "10") (term "1"))
   (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "9"))
   (rule "concrete_not_1" (formula "10") (term "1"))
   (rule "concrete_impl_3" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "notRight" (formula "10"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnRigidTerm" (formula "1") (term "0"))
   (rule "simplifyUpdate1" (formula "1") (term "2,0"))
   (rule "applyOnPV" (formula "1") (term "0,0"))
   (rule "simplifyUpdate1" (formula "1") (term "1,0"))
   (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_byOperator,exc_1") (contract "casino.contract.Casino[casino.contract.Casino::byOperator()].JML exceptional_behavior operation contract.0#casino.contract.Casino[casino.contract.Casino::byOperator()].JML normal_behavior operation contract.0"))
   (branch "Post (byOperator)"
      (rule "instanceof_static_type" (formula "10") (term "0,0,0,1,1,0,1,1,1"))
      (rule "boolean_equal" (formula "10") (term "0,0,1,1,0,1,1,1"))
      (rule "concrete_impl_1" (formula "10") (term "0,1,1,0,1,1,1"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "typeEqDerived" (formula "11") (term "0,1,1,1,0,1") (ifseqformula "10"))
      (rule "boolean_equal" (formula "11") (term "1,1,1,0,1"))
      (rule "concrete_and_3" (formula "11") (term "1,1,0,1"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "simplifyUpdate2" (formula "12") (term "1"))
      (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "7"))
      (rule "concrete_and_1" (formula "12") (term "1"))
      (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "10"))
      (rule "concrete_impl_4" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "simplifyUpdate2" (formula "11") (term "1"))
      (rule "replace_known_left" (formula "11") (term "1,1") (ifseqformula "7"))
      (rule "concrete_and_3" (formula "11") (term "1"))
      (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "10"))
      (rule "concrete_not_1" (formula "11") (term "1"))
      (rule "concrete_impl_3" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "applyOnRigidFormula" (formula "11") (term "0"))
      (rule "applyOnRigidFormula" (formula "11") (term "1"))
      (rule "simplifyUpdate1" (formula "11") (term "1,1"))
      (rule "applyOnPV" (formula "11") (term "0,1"))
      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "7"))
      (rule "concrete_and_3" (formula "11"))
      (rule "notRight" (formula "11"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnRigidTerm" (formula "1") (term "0"))
      (rule "applyOnPV" (formula "1") (term "0,0"))
      (rule "applyOnRigidTerm" (formula "1") (term "1,0"))
      (rule "applyOnPV" (formula "1") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "1") (term "2,1,0"))
      (rule "applyOnRigidTerm" (formula "1") (term "2,0"))
      (rule "simplifyUpdate1" (formula "1") (term "1,2,0"))
      (rule "applyOnPV" (formula "1") (term "0,2,0"))
      (rule "simplifyUpdate1" (formula "1") (term "2,2,0"))
      (rule "applyOnRigidTerm" (formula "1") (term "1,1,0"))
      (rule "simplifyUpdate1" (formula "1") (term "2,1,1,0"))
      (rule "applyOnPV" (formula "1") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "1") (term "1,1,1,0"))
      (rule "methodCallUnfoldArguments" (formula "12") (term "1"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "var"))
      (rule "assignment_read_attribute_this" (formula "12") (term "1"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_selfdestruct,exc_2,heapAfter_selfdestruct,anon_heap_selfdestruct") (contract "casino.contract.Casino[casino.contract.Casino::selfdestruct(blockchain.types.Address)].JML normal_behavior operation contract.0"))
      (branch "Post (selfdestruct)"
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "sequentialToParallel2" (formula "13"))
         (rule "simplifyUpdate3" (formula "13") (term "1,0"))
         (rule "andLeft" (formula "13"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "applyOnRigidFormula" (formula "12"))
         (rule "simplifyUpdate1" (formula "12") (term "1"))
         (rule "applyOnRigidFormula" (formula "14"))
         (rule "simplifyUpdate1" (formula "14") (term "1"))
         (rule "applyOnRigidFormula" (formula "15"))
         (rule "simplifyUpdate1" (formula "15") (term "1"))
         (rule "applyOnRigidFormula" (formula "17"))
         (rule "simplifyUpdate1" (formula "17") (term "1"))
         (rule "applyOnPV" (formula "17") (term "0"))
         (rule "applyOnRigidFormula" (formula "16"))
         (rule "simplifyUpdate1" (formula "16") (term "1"))
         (rule "applyOnRigidTerm" (formula "12") (term "0"))
         (rule "simplifyUpdate1" (formula "12") (term "0,0"))
         (rule "simplifyUpdate1" (formula "12") (term "2,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,0"))
         (rule "applyOnPV" (formula "14") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "15") (term "0"))
         (rule "applyOnPV" (formula "15") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "16") (term "0"))
         (rule "simplifyUpdate1" (formula "16") (term "2,0"))
         (rule "applyOnPV" (formula "16") (term "0,0"))
         (rule "simplifyUpdate1" (formula "16") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "12") (term "1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,1,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "2,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,2,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,2,0"))
         (rule "applyOnPV" (formula "14") (term "0,2,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,1,0"))
         (rule "applyOnPV" (formula "14") (term "0,1,0"))
         (rule "applyOnPV" (formula "14") (term "1,1,0"))
         (rule "applyOnRigidTerm" (formula "15") (term "1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "1,1,0"))
         (rule "applyOnPV" (formula "15") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "2,1,0"))
         (rule "applyOnRigidTerm" (formula "15") (term "2,0"))
         (rule "applyOnPV" (formula "15") (term "0,2,0"))
         (rule "simplifyUpdate1" (formula "15") (term "1,2,0"))
         (rule "simplifyUpdate1" (formula "15") (term "2,2,0"))
         (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "1,2,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,1,2,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,1,2,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,1,2,0"))
         (rule "applyOnPV" (formula "14") (term "1,1,2,0"))
         (rule "applyOnPV" (formula "14") (term "0,1,2,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "2,2,0"))
         (rule "applyOnPV" (formula "14") (term "0,2,2,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,2,2,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,2,2,0"))
         (rule "applyOnRigidTerm" (formula "12") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "12") (term "0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,1,0,1,0"))
         (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=casino_contract_Casino_destroyed_0"))
         (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "12"))
         (rule "elementOfFreshLocs" (formula "16") (term "1,0,0"))
         (rule "equalUnique" (formula "16") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "16") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "16") (term "0,0,0"))
         (rule "replace_known_right" (formula "16") (term "0,0,1,0,0") (ifseqformula "19"))
         (rule "concrete_not_2" (formula "16") (term "0,1,0,0"))
         (rule "concrete_and_1" (formula "16") (term "1,0,0"))
         (rule "replace_known_left" (formula "16") (term "0,1,0,0") (ifseqformula "2"))
         (rule "concrete_not_1" (formula "16") (term "1,0,0"))
         (rule "concrete_or_4" (formula "16") (term "0,0"))
         (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "17"))
         (rule "ifEqualsTRUE" (formula "16"))
         (rule "elementOfUnion" (formula "16") (term "0,0"))
         (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
         (rule "equalUnique" (formula "16") (term "1,1,0,0"))
         (rule "concrete_and_3" (formula "16") (term "1,0,0"))
         (rule "eqClose" (formula "16") (term "1,0,0"))
         (rule "concrete_or_3" (formula "16") (term "0,0"))
         (rule "concrete_and_1" (formula "16") (term "0"))
         (rule "elementOfUnion" (formula "16") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "16") (term "1,0,0,1"))
         (rule "eqClose" (formula "16") (term "0,1,0,0,1"))
         (rule "concrete_and_1" (formula "16") (term "1,0,0,1"))
         (rule "eqClose" (formula "16") (term "1,0,0,1"))
         (rule "concrete_or_3" (formula "16") (term "0,0,1"))
         (rule "concrete_not_1" (formula "16") (term "0,1"))
         (rule "concrete_and_2" (formula "16") (term "1"))
         (rule "concrete_or_4" (formula "16"))
         (rule "pullOutSelect" (formula "14") (term "1,0") (inst "selectSK=blockchain_types_Address_balance_0"))
         (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "12"))
         (rule "elementOfFreshLocs" (formula "14") (term "1,0,0"))
         (rule "equalUnique" (formula "14") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "14") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "14") (term "0,0,0"))
         (rule "elementOfUnion" (formula "14") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "14") (term "1,0,0,0"))
         (rule "equalUnique" (formula "14") (term "1,1,0,0,0"))
         (rule "concrete_and_4" (formula "14") (term "1,0,0,0"))
         (rule "concrete_or_4" (formula "14") (term "0,0,0"))
         (rule "elementOfUnion" (formula "14") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "14") (term "1,0,0,0"))
         (rule "eqClose" (formula "14") (term "0,1,0,0,0"))
         (rule "concrete_and_1" (formula "14") (term "1,0,0,0"))
         (rule "eqClose" (formula "14") (term "1,0,0,0"))
         (rule "concrete_or_3" (formula "14") (term "0,0,0"))
         (rule "concrete_or_1" (formula "14") (term "0,0"))
         (rule "ifthenelse_true" (formula "14") (term "0"))
         (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "14"))
         (rule "hideAuxiliaryEq" (formula "14"))
         (rule "pullOutSelect" (formula "15") (term "1,0") (inst "selectSK=blockchain_types_Address_balance_1"))
         (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "12"))
         (rule "elementOfFreshLocs" (formula "15") (term "1,0,0"))
         (rule "equalUnique" (formula "15") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "15") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "15") (term "0,0,0"))
         (rule "replace_known_left" (formula "15") (term "0,1,1,0,0") (ifseqformula "2"))
         (rule "concrete_not_1" (formula "15") (term "1,1,0,0"))
         (rule "concrete_and_4" (formula "15") (term "1,0,0"))
         (rule "concrete_or_4" (formula "15") (term "0,0"))
         (rule "elementOfUnion" (formula "15") (term "0,0"))
         (rule "elementOfSingleton" (formula "15") (term "1,0,0"))
         (rule "equalUnique" (formula "15") (term "1,1,0,0"))
         (rule "concrete_and_4" (formula "15") (term "1,0,0"))
         (rule "concrete_or_4" (formula "15") (term "0,0"))
         (rule "elementOfUnion" (formula "15") (term "0,0"))
         (rule "elementOfSingleton" (formula "15") (term "0,0,0"))
         (rule "eqClose" (formula "15") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "15") (term "0,0,0"))
         (rule "eqClose" (formula "15") (term "0,0,0"))
         (rule "concrete_or_1" (formula "15") (term "0,0"))
         (rule "ifthenelse_true" (formula "15") (term "0"))
         (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "pullOutSelect" (formula "15") (term "2,0") (inst "selectSK=blockchain_types_Uint256_ZERO_0"))
         (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "12"))
         (rule "elementOfFreshLocs" (formula "15") (term "1,0,0"))
         (rule "equalUnique" (formula "15") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "15") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "15") (term "0,0,0"))
         (rule "eqClose" (formula "15") (term "0,0,1,0,0"))
         (rule "concrete_not_1" (formula "15") (term "0,1,0,0"))
         (rule "concrete_and_2" (formula "15") (term "1,0,0"))
         (rule "concrete_or_4" (formula "15") (term "0,0"))
         (rule "elementOfUnion" (formula "15") (term "0,0"))
         (rule "elementOfSingleton" (formula "15") (term "1,0,0"))
         (rule "equalUnique" (formula "15") (term "1,1,0,0"))
         (rule "concrete_and_4" (formula "15") (term "1,0,0"))
         (rule "concrete_or_4" (formula "15") (term "0,0"))
         (rule "elementOfUnion" (formula "15") (term "0,0"))
         (rule "elementOfSingleton" (formula "15") (term "0,0,0"))
         (rule "equalUnique" (formula "15") (term "1,0,0,0"))
         (rule "concrete_and_4" (formula "15") (term "0,0,0"))
         (rule "concrete_or_2" (formula "15") (term "0,0"))
         (rule "elementOfSingleton" (formula "15") (term "0,0"))
         (rule "equalUnique" (formula "15") (term "1,0,0"))
         (rule "concrete_and_4" (formula "15") (term "0,0"))
         (rule "ifthenelse_false" (formula "15") (term "0"))
         (rule "applyEqReverse" (formula "16") (term "2,0") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "commuteUnion_2" (formula "12") (term "1,0"))
         (rule "hideAuxiliaryEqConcrete" (formula "17"))
         (rule "methodCallEmpty" (formula "19") (term "1"))
         (rule "tryEmpty" (formula "19") (term "1"))
         (rule "emptyModality" (formula "19") (term "1"))
         (rule "applyOnRigidFormula" (formula "19"))
         (rule "simplifyUpdate2" (formula "19") (term "1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0"))
         (rule "simplifyUpdate2" (formula "19") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
         (rule "simplifyUpdate2" (formula "19") (term "0,0,0"))
         (rule "simplifyUpdate2" (formula "19") (term "1,0,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
         (rule "simplifyUpdate2" (formula "19") (term "0,1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,0,0"))
         (rule "eqClose" (formula "19") (term "0,0,0"))
         (rule "concrete_impl_1" (formula "19") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,1,0"))
         (rule "simplifyUpdate2" (formula "19") (term "1,1,1,0"))
         (rule "simplifyUpdate2" (formula "19") (term "0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0,1"))
         (rule "simplifyUpdate2" (formula "19") (term "0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
         (rule "simplifyUpdate2" (formula "19") (term "1,0,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,1,1,1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1,0"))
         (rule "replace_known_left" (formula "19") (term "0,1,1,0") (ifseqformula "17"))
         (rule "concrete_and_1" (formula "19") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,0,1,0"))
         (rule "eqClose" (formula "19") (term "0,0,1,0"))
         (rule "concrete_not_1" (formula "19") (term "0,1,0"))
         (rule "concrete_impl_2" (formula "19") (term "1,0"))
         (rule "concrete_and_3" (formula "19") (term "0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,1,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,0,1"))
         (rule "applyOnPV" (formula "19") (term "0,0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,0,1"))
         (rule "eqSymm" (formula "19") (term "1,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,0,1"))
         (rule "simplifyUpdate2" (formula "19") (term "1,0,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,0,1"))
         (rule "simplifyUpdate2" (formula "19") (term "0,1,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "0,0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,0,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,0,1"))
         (rule "applyOnPV" (formula "19") (term "0,0,1,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,0,0,1"))
         (rule "simplifyUpdate2" (formula "19") (term "0,0,0,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,1,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,1,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,1,1,1,0"))
         (rule "replace_known_left" (formula "19") (term "1,1,1,0") (ifseqformula "17"))
         (rule "concrete_and_3" (formula "19") (term "1,1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "1,0,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "2,0,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,2,0,0,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,0,0,0,1"))
         (rule "simplifyUpdate2" (formula "19") (term "1,1,0,0,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1,1,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1,0,0,0,1"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,1,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,0,1,1,0"))
         (rule "replaceKnownSelect_taclet000_0" (formula "19") (term "0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "19") (term "0,1,1,0"))
         (rule "boolean_equal" (formula "19") (term "1,1,0"))
         (rule "concrete_and_3" (formula "19") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "1,1,0,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,1,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,1,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,1,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "1,2,0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,1,2,0,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,1,2,0,0,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "2,2,0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,2,2,0,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,2,2,0,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,2,2,0,0,0"))
         (rule "applyOnRigidFormula" (formula "19") (term "0,1,0,0,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "0,0,1,0,0,0,0,0,1"))
         (rule "applyOnRigidTerm" (formula "19") (term "0,0,1,1,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,0,0,1,1,0,0,0,1"))
         (rule "applyOnPV" (formula "19") (term "0,0,0,1,1,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "2,0,0,1,1,0,0,0,1"))
         (rule "applyOnRigidTerm" (formula "19") (term "2,0,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,2,0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,2,0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,2,0,1,0"))
         (rule "replaceKnownSelect_taclet000_5" (formula "19") (term "2,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_6" (formula "19") (term "2,0,1,0"))
         (rule "applyOnRigidTerm" (formula "19") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "19") (term "0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1,0"))
         (rule "replaceKnownSelect_taclet000_3" (formula "19") (term "1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_4" (formula "19") (term "1,0,1,0"))
         (rule "replace_known_left" (formula "19") (term "1,0") (ifseqformula "15"))
         (rule "concrete_and_3" (formula "19") (term "0"))
         (rule "applyOnRigidTerm" (formula "19") (term "1,0,1,0,0,0,0,0,1"))
         (rule "applyOnPV" (formula "19") (term "0,1,0,1,0,0,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1,0,0,0,0,0,1"))
         (rule "simplifyUpdate1" (formula "19") (term "2,1,0,1,0,0,0,0,0,1"))
         (rule "applyOnRigidTerm" (formula "19") (term "1,1,2,0,0"))
         (rule "applyOnPV" (formula "19") (term "0,1,1,2,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "1,1,1,2,0,0"))
         (rule "simplifyUpdate1" (formula "19") (term "2,1,1,2,0,0"))
         (rule "pullOutSelect" (formula "19") (term "1,0,0") (inst "selectSK=blockchain_types_Address_balance_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "equalUnique" (formula "1") (term "1,1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "1,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
         (rule "eqClose" (formula "1") (term "1,0,0,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
         (rule "equalUnique" (formula "1") (term "1,1,0,0,0,0"))
         (rule "concrete_and_4" (formula "1") (term "1,0,0,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=casino_contract_Casino_operator_0"))
         (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "2") (term "1,0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "4"))
         (rule "concrete_not_1" (formula "1") (term "1,1,0,0"))
         (rule "concrete_and_4" (formula "1") (term "1,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
         (rule "equalUnique" (formula "1") (term "1,1,0,0"))
         (rule "concrete_and_4" (formula "1") (term "1,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0,0"))
         (rule "equalUnique" (formula "1") (term "0,0,0"))
         (rule "concrete_or_2" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,1,0,0,0") (ifseqformula "1"))
         (rule "eqClose" (formula "2") (term "1,0,0,0"))
         (rule "concrete_or_3" (formula "2") (term "0,0,0"))
         (rule "concrete_or_1" (formula "2") (term "0,0"))
         (rule "ifthenelse_true" (formula "2") (term "0"))
         (rule "applyEqReverse" (formula "21") (term "1,0,0") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "14"))
         (rule "concrete_and_1" (formula "19"))
         (rule "allRight" (formula "19") (inst "sk=f_0"))
         (rule "allRight" (formula "19") (inst "sk=o_0"))
         (rule "orRight" (formula "19"))
         (rule "orRight" (formula "19"))
         (rule "orRight" (formula "19"))
         (rule "orRight" (formula "19"))
         (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "eqSymm" (formula "24"))
         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "23"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "21"))
         (rule "concrete_or_4" (formula "1") (term "0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "22"))
         (rule "concrete_or_4" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "close" (formula "24") (ifseqformula "1"))
      )
      (branch "Exceptional Post (selfdestruct)"
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "andLeft" (formula "12"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "sequentialToParallel2" (formula "13"))
         (rule "simplifyUpdate3" (formula "13") (term "1,0"))
         (rule "andLeft" (formula "13"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "andLeft" (formula "15"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "notLeft" (formula "13"))
         (rule "close" (formula "17") (ifseqformula "16"))
      )
      (branch "Pre (selfdestruct)"
         (rule "simplifyUpdate2" (formula "12"))
         (rule "simplifyUpdate2" (formula "12") (term "1"))
         (rule "applyOnRigidFormula" (formula "12"))
         (rule "applyOnRigidFormula" (formula "12") (term "1"))
         (rule "simplifyUpdate2" (formula "12") (term "0,1"))
         (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "1"))
         (rule "concrete_and_1" (formula "12") (term "1"))
         (rule "applyOnRigidFormula" (formula "12") (term "0"))
         (rule "applyOnRigidFormula" (formula "12") (term "1"))
         (rule "applyOnRigidFormula" (formula "12") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "12") (term "1,0"))
         (rule "simplifyUpdate2" (formula "12") (term "0,1,0"))
         (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "7"))
         (rule "concrete_and_1" (formula "12") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "12") (term "1,1"))
         (rule "simplifyUpdate1" (formula "12") (term "1,1,1"))
         (rule "applyOnRigidFormula" (formula "12") (term "0,1"))
         (rule "applyOnPV" (formula "12") (term "0,0,1"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0,1"))
         (rule "applyOnRigidFormula" (formula "12") (term "1,0,0"))
         (rule "applyOnRigidFormula" (formula "12") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "12") (term "0,0,0,0"))
         (rule "applyOnPV" (formula "12") (term "1,0,0,0"))
         (rule "applyOnRigidFormula" (formula "12") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "12") (term "0,1,1"))
         (rule "simplifyUpdate1" (formula "12") (term "0,0,1,1"))
         (rule "applyOnPV" (formula "12") (term "1,0,1,1"))
         (rule "simplifyUpdate1" (formula "12") (term "2,0,1,1"))
         (rule "applyOnRigidFormula" (formula "12") (term "0,1,0,0"))
         (rule "applyOnPV" (formula "12") (term "0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "12") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "12") (term "0,0,1,0"))
         (rule "Class_invariant_axiom_for_casino_contract_Casino" (formula "7") (inst "o_2=o_2") (inst "o_1=o_1") (inst "o_0=o_0") (inst "o=o") (inst "o_3=o_3") (inst "o_4=o_4") (inst "o_5=o_5") (inst "o_6=o_6") (inst "sk=sk_0"))
         (branch "Use Axiom"
            (rule "insert_constant_value" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "7") (term "1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "7") (term "1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "insert_constant_value" (formula "7") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "9"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "12"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "12"))
            (rule "notLeft" (formula "10"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "13"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "14"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "9"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "9"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "9"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "9"))
            (rule "notLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "8"))
            (rule "notLeft" (formula "7"))
            (rule "eqSymm" (formula "44"))
            (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "5"))
            (rule "concrete_or_1" (formula "16") (term "0"))
            (rule "concrete_or_1" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "30"))
            (rule "concrete_not_2" (formula "50") (term "1,0"))
            (rule "concrete_and_3" (formula "50") (term "0"))
            (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "40"))
            (rule "concrete_not_2" (formula "50") (term "1,0"))
            (rule "concrete_and_3" (formula "50") (term "0"))
            (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "16"))
            (rule "concrete_and_1" (formula "50"))
            (rule "orRight" (formula "50"))
            (rule "referencedObjectIsCreatedRight" (formula "50") (ifseqformula "30"))
            (rule "close" (formula "50") (ifseqformula "1"))
         )
         (branch "Show Axiom Satisfiability"
            (rule "concrete_eq_2" (formula "11") (term "1"))
            (rule "concrete_eq_1" (formula "11") (term "0"))
            (rule "neq_or" (formula "11"))
            (rule "closeTrue" (formula "11"))
         )
      )
   )
   (branch "Exceptional Post (byOperator)"
      (rule "instanceof_static_type" (formula "10") (term "0,0,0,1,1,0,1,1,1"))
      (rule "boolean_equal" (formula "10") (term "0,0,1,1,0,1,1,1"))
      (rule "concrete_impl_1" (formula "10") (term "0,1,1,0,1,1,1"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "simplifyUpdate2" (formula "12") (term "1"))
      (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "7"))
      (rule "concrete_and_1" (formula "12") (term "1"))
      (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "13"))
      (rule "concrete_impl_3" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "simplifyUpdate2" (formula "11") (term "1"))
      (rule "replace_known_left" (formula "11") (term "0,1,1") (ifseqformula "7"))
      (rule "concrete_and_1" (formula "11") (term "1,1"))
      (rule "replace_known_right" (formula "11") (term "0,0,1") (ifseqformula "13"))
      (rule "concrete_not_2" (formula "11") (term "0,1"))
      (rule "concrete_and_1" (formula "11") (term "1"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "applyOnRigidFormula" (formula "11") (term "0"))
      (rule "applyOnRigidFormula" (formula "12") (term "1"))
      (rule "applyOnPV" (formula "12") (term "0,1"))
      (rule "simplifyUpdate1" (formula "12") (term "1,1"))
      (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "7"))
      (rule "concrete_and_3" (formula "12"))
      (rule "replace_known_right" (formula "11") (term "0,1,0,0") (ifseqformula "12"))
      (rule "concrete_not_2" (formula "11") (term "1,0,0"))
      (rule "simplifyUpdate2" (formula "11") (term "0,0"))
      (rule "concrete_and_1" (formula "11") (term "0"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "simplifyUpdate1" (formula "12") (term "1"))
      (rule "applyOnRigidFormula" (formula "11") (term "0"))
      (rule "applyOnPV" (formula "11") (term "0,0"))
      (rule "simplifyUpdate1" (formula "11") (term "1,0"))
      (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "7"))
      (rule "concrete_impl_1" (formula "11"))
      (rule "applyOnRigidTerm" (formula "12") (term "0"))
      (rule "applyOnPV" (formula "12") (term "0,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "1,0"))
      (rule "applyOnPV" (formula "12") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "2,0"))
      (rule "applyOnPV" (formula "12") (term "0,2,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,2,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,2,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "1,1,0"))
      (rule "applyOnPV" (formula "12") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,1,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,1,1,0"))
      (rule "close" (formula "12") (ifseqformula "6"))
   )
   (branch "Pre (byOperator)"
      (rule "simplifyUpdate2" (formula "11"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "6"))
      (rule "concrete_not_1" (formula "11") (term "0,0,0"))
      (rule "concrete_and_2" (formula "11") (term "0,0"))
      (rule "concrete_or_2" (formula "11") (term "0"))
      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "1"))
      (rule "concrete_and_3" (formula "11"))
      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "7"))
      (rule "concrete_and_3" (formula "11"))
      (rule "close" (formula "11") (ifseqformula "6"))
   )
)
(branch "Exceptional Post (inState)"
   (rule "insert_constant_value" (formula "9") (term "0,0,1,1,1,1"))
   (rule "insert_constant_value" (formula "9") (term "0,0,0,0,1,1,1"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "9"))
   (rule "eqSymm" (formula "11") (term "0,1"))
   (rule "eqSymm" (formula "10") (term "0,0,1"))
   (rule "applyOnRigidFormula" (formula "11"))
   (rule "simplifyUpdate2" (formula "11") (term "1"))
   (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "12"))
   (rule "concrete_impl_3" (formula "11"))
   (rule "notLeft" (formula "11"))
   (rule "replace_known_right" (formula "10") (term "0,0,1") (ifseqformula "11"))
   (rule "concrete_not_2" (formula "10") (term "0,1"))
   (rule "concrete_impl_1" (formula "10") (term "1"))
   (rule "simplifyUpdate2" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "applyOnRigidFormula" (formula "11"))
   (rule "simplifyUpdate1" (formula "11") (term "1"))
   (rule "applyOnRigidTerm" (formula "11") (term "0"))
   (rule "applyOnPV" (formula "11") (term "0,0"))
   (rule "simplifyUpdate1" (formula "11") (term "2,0"))
   (rule "simplifyUpdate1" (formula "11") (term "1,0"))
   (rule "close" (formula "11") (ifseqformula "5"))
)
(branch "Pre (inState)"
   (rule "neq_or_2" (formula "10") (term "0,1,1"))
   (rule "concrete_and_1" (formula "10") (term "1,1"))
   (rule "inInt" (formula "10") (term "1,1,1"))
   (rule "concrete_and_3" (formula "10") (term "1,1"))
   (rule "simplifyUpdate2" (formula "10"))
   (rule "simplifyUpdate2" (formula "10"))
   (rule "close" (formula "10") (ifseqformula "1"))
)
)

}
